From a991c657f17fe5473e81a239e9416277ef3d6e09 Mon Sep 17 00:00:00 2001
From: Luca Bacci <luca.bacci982@gmail.com>
Date: Mon, 22 Apr 2024 14:34:11 +0200
Subject: [PATCH 07/10] GDK W32: transient Z-order rollback

Backport from GTK3 to GTK2 of commit 83ebdbdb (MR !1769)
---
 gdk/win32/gdkevents-win32.c | 152 ------------------------------------
 1 file changed, 152 deletions(-)

diff --git a/gdk/win32/gdkevents-win32.c b/gdk/win32/gdkevents-win32.c
index f3a428c..30b11ee 100644
--- a/gdk/win32/gdkevents-win32.c
+++ b/gdk/win32/gdkevents-win32.c
@@ -1951,146 +1951,6 @@ generate_button_event (GdkEventType type,
   _gdk_win32_append_event (event);
 }
 
-static void
-ensure_stacking_on_unminimize (MSG *msg)
-{
-  HWND rover;
-  HWND lowest_transient = NULL;
-
-  rover = msg->hwnd;
-  while ((rover = GetNextWindow (rover, GW_HWNDNEXT)))
-    {
-      GdkWindow *rover_gdkw = gdk_win32_handle_table_lookup (rover);
-
-      /* Checking window group not implemented yet */
-      if (rover_gdkw)
-	{
-	  GdkWindowImplWin32 *rover_impl =
-	    (GdkWindowImplWin32 *)((GdkWindowObject *)rover_gdkw)->impl;
-
-	  if (GDK_WINDOW_IS_MAPPED (rover_gdkw) &&
-	      (rover_impl->type_hint == GDK_WINDOW_TYPE_HINT_UTILITY ||
-	       rover_impl->type_hint == GDK_WINDOW_TYPE_HINT_DIALOG ||
-	       rover_impl->transient_owner != NULL))
-	    {
-	      lowest_transient = rover;
-	    }
-	}
-    }
-  if (lowest_transient != NULL)
-    {
-      GDK_NOTE (EVENTS, g_print (" restacking: %p", lowest_transient));
-      SetWindowPos (msg->hwnd, lowest_transient, 0, 0, 0, 0,
-		    SWP_NOACTIVATE | SWP_NOMOVE | SWP_NOSIZE);
-    }
-}
-
-static gboolean
-ensure_stacking_on_window_pos_changing (MSG       *msg,
-					GdkWindow *window)
-{
-  GdkWindowImplWin32 *impl = (GdkWindowImplWin32 *)((GdkWindowObject *) window)->impl;
-  WINDOWPOS *windowpos = (WINDOWPOS *) msg->lParam;
-
-  if (GetActiveWindow () == msg->hwnd &&
-      impl->type_hint != GDK_WINDOW_TYPE_HINT_UTILITY &&
-      impl->type_hint != GDK_WINDOW_TYPE_HINT_DIALOG &&
-      impl->transient_owner == NULL)
-    {
-      /* Make sure the window stays behind any transient-type windows
-       * of the same window group.
-       *
-       * If the window is not active and being activated, we let
-       * Windows bring it to the top and rely on the WM_ACTIVATEAPP
-       * handling to bring any utility windows on top of it.
-       */
-      HWND rover;
-      gboolean restacking;
-
-      rover = windowpos->hwndInsertAfter;
-      restacking = FALSE;
-      while (rover)
-	{
-	  GdkWindow *rover_gdkw = gdk_win32_handle_table_lookup (rover);
-
-	  /* Checking window group not implemented yet */
-	  if (rover_gdkw)
-	    {
-	      GdkWindowImplWin32 *rover_impl =
-		(GdkWindowImplWin32 *)((GdkWindowObject *)rover_gdkw)->impl;
-
-	      if (GDK_WINDOW_IS_MAPPED (rover_gdkw) &&
-		  (rover_impl->type_hint == GDK_WINDOW_TYPE_HINT_UTILITY ||
-		   rover_impl->type_hint == GDK_WINDOW_TYPE_HINT_DIALOG ||
-		   rover_impl->transient_owner != NULL))
-		{
-		  restacking = TRUE;
-		  windowpos->hwndInsertAfter = rover;
-		}
-	    }
-	  rover = GetNextWindow (rover, GW_HWNDNEXT);
-	}
-
-      if (restacking)
-	{
-	  GDK_NOTE (EVENTS, g_print (" restacking: %p", windowpos->hwndInsertAfter));
-	  return TRUE;
-	}
-    }
-  return FALSE;
-}
-
-static void
-ensure_stacking_on_activate_app (MSG       *msg,
-				 GdkWindow *window)
-{
-  GdkWindowImplWin32 *impl = (GdkWindowImplWin32 *)((GdkWindowObject *) window)->impl;
-
-  if (impl->type_hint == GDK_WINDOW_TYPE_HINT_UTILITY ||
-      impl->type_hint == GDK_WINDOW_TYPE_HINT_DIALOG ||
-      impl->transient_owner != NULL)
-    {
-      SetWindowPos (msg->hwnd, HWND_TOP, 0, 0, 0, 0,
-		    SWP_NOACTIVATE | SWP_NOMOVE | SWP_NOSIZE);
-      return;
-    }
-
-  if (IsWindowVisible (msg->hwnd) &&
-      msg->hwnd == GetActiveWindow ())
-    {
-      /* This window is not a transient-type window and it is the
-       * activated window. Make sure this window is as visible as
-       * possible, just below the lowest transient-type window of this
-       * app.
-       */
-      HWND rover;
-
-      rover = msg->hwnd;
-      while ((rover = GetNextWindow (rover, GW_HWNDPREV)))
-	{
-	  GdkWindow *rover_gdkw = gdk_win32_handle_table_lookup (rover);
-
-	  /* Checking window group not implemented yet */
-	  if (rover_gdkw)
-	    {
-	      GdkWindowImplWin32 *rover_impl =
-		(GdkWindowImplWin32 *)((GdkWindowObject *)rover_gdkw)->impl;
-
-	      if (GDK_WINDOW_IS_MAPPED (rover_gdkw) &&
-		  (rover_impl->type_hint == GDK_WINDOW_TYPE_HINT_UTILITY ||
-		   rover_impl->type_hint == GDK_WINDOW_TYPE_HINT_DIALOG ||
-		   rover_impl->transient_owner != NULL))
-		{
-		  GDK_NOTE (EVENTS, g_print (" restacking: %p", rover));
-		  SetWindowPos (msg->hwnd, rover, 0, 0, 0, 0,
-				SWP_NOACTIVATE | SWP_NOMOVE | SWP_NOSIZE);
-		  break;
-		}
-	    }
-	}
-    }
-}
-
 #define GDK_ANY_BUTTON_MASK (GDK_BUTTON1_MASK | \
 			     GDK_BUTTON2_MASK | \
 			     GDK_BUTTON3_MASK | \
@@ -3218,9 +3078,6 @@ gdk_event_translate (MSG  *msg,
 				       buf))))),
 				  windowpos->cx, windowpos->cy, windowpos->x, windowpos->y,
 				  GetNextWindow (msg->hwnd, GW_HWNDPREV))));
-
-      if (GDK_WINDOW_IS_MAPPED (window))
-	return_val = ensure_stacking_on_window_pos_changing (msg, window);
       break;
 
     case WM_WINDOWPOSCHANGED:
@@ -3295,13 +3152,6 @@ gdk_event_translate (MSG  *msg,
 	  if ((old_state & GDK_WINDOW_STATE_ICONIFIED) != 
 	      (new_state & GDK_WINDOW_STATE_ICONIFIED))
 	    do_show_window (window, (new_state & GDK_WINDOW_STATE_ICONIFIED));
-
-
-	  /* When un-minimizing, make sure we're stacked under any 
-	     transient-type windows. */
-	  if (!(old_state & GDK_WINDOW_STATE_ICONIFIED) &&
-	      (new_state & GDK_WINDOW_STATE_ICONIFIED))
-	    ensure_stacking_on_unminimize (msg);
 	}
 
       /* Show, New size or position => configure event */
@@ -3798,8 +3648,6 @@ gdk_event_translate (MSG  *msg,
       GDK_NOTE (EVENTS, g_print (" %s thread: %I64d",
 				 msg->wParam ? "YES" : "NO",
 				 (gint64) msg->lParam));
-      if (msg->wParam && GDK_WINDOW_IS_MAPPED (window))
-	ensure_stacking_on_activate_app (msg, window);
       break;
 
       /* Handle WINTAB events here, as we know that gdkinput.c will
-- 
2.39.1.windows.1

